{"ast":null,"code":"var _jsxFileName = \"/home/gerald/repositorios/BD2/proyecto1/src/App.js\",\n  _s = $RefreshSig$();\n// Frontend code \n// Filename - App.js\n// Filename - App.js\nimport mongoose from 'mongoose';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const handleOnSubmit = async e => {\n    e.preventDefault();\n    let result = await fetch('http://localhost:5000/register', {\n      method: \"post\",\n      body: JSON.stringify({\n        name,\n        email\n      }),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n    result = await result.json();\n    console.warn(result);\n    if (result) {\n      alert(\"Data saved succesfully\");\n      setEmail(\"\");\n      setName(\"\");\n    }\n  };\n  let owner = \"Gerald\";\n  //let name = \"Repositorio\";\n  let files = [mongoose.ObjectId()];\n  const createRep = async e => {\n    e.preventDefault();\n    let result = await fetch('http://localhost:5000/add', {\n      method: \"post\",\n      body: JSON.stringify({\n        owner,\n        name,\n        files\n      }),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n    result = await result.json();\n    console.warn(result);\n    if (result) {\n      alert(\"Data saved succesfully\");\n      setEmail(\"\");\n      setName(\"\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"This is React WebApp \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      action: \"\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"name\",\n        value: name,\n        onChange: e => setName(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        placeholder: \"email\",\n        value: email,\n        onChange: e => setEmail(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        onClick: createRep,\n        children: \"submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n_s(App, \"IOAD2zHQx85JzCqUUz8vHnYu/60=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["mongoose","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","name","setName","email","setEmail","handleOnSubmit","e","preventDefault","result","fetch","method","body","JSON","stringify","headers","json","console","warn","alert","owner","files","ObjectId","createRep","children","fileName","_jsxFileName","lineNumber","columnNumber","action","type","placeholder","value","onChange","target","onClick","_c","$RefreshReg$"],"sources":["/home/gerald/repositorios/BD2/proyecto1/src/App.js"],"sourcesContent":["// Frontend code \n// Filename - App.js\n// Filename - App.js\nimport mongoose from 'mongoose'\nimport { useState } from 'react'\nfunction App() {\n    const [name, setName] = useState(\"\");\n    const [email, setEmail] = useState(\"\");\n    const handleOnSubmit = async (e) => {\n        e.preventDefault();\n        let result = await fetch(\n        'http://localhost:5000/register', {\n            method: \"post\",\n            body: JSON.stringify({ name, email }),\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        })\n        result = await result.json();\n        console.warn(result);\n        if (result) {\n            alert(\"Data saved succesfully\");\n            setEmail(\"\");\n            setName(\"\");\n        }\n    }\n\n    let owner = \"Gerald\";\n    //let name = \"Repositorio\";\n    let files = [mongoose.ObjectId()];\n    const createRep = async (e) => {\n        e.preventDefault();\n        let result = await fetch(\n        'http://localhost:5000/add', {\n            method: \"post\",\n            body: JSON.stringify({ owner, name, files }),\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        })\n        result = await result.json();\n        console.warn(result);\n        if (result) {\n            alert(\"Data saved succesfully\");\n            setEmail(\"\");\n            setName(\"\");\n        }\n    }\n    return (\n        <>\n            <h1>This is React WebApp </h1>\n            <form action=\"\">\n                <input type=\"text\" placeholder=\"name\" \n                value={name} onChange={(e) => setName(e.target.value)} />\n                <input type=\"email\" placeholder=\"email\" \n                value={email} onChange={(e) => setEmail(e.target.value)} />\n                <button type=\"submit\" \n                onClick={createRep}>submit</button>\n            </form>\n\n        </>\n    );\n}\n\nexport default App;\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}